require 'spec'
require 'topo_xbar'
require 'math' 


local s = spec.Spec:new()
local b = s:builder()
local num_cpu = 2
local cid_width = 4

b:component('ram_curleft','cpu_ram_curleft_ct')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('net_write_in', 'data','in','clk')
		b:signal('data','i_net_waddr','8','waddr')
		b:signal('data','i_net_wdata','512','wdata')
		b:signal('data','i_net_wclaim','1','wclaim')
		b:signal('data','i_net_wrelease','1','wrelease')
		b:signal('data','i_net_we','2','we')
		b:signal('valid','i_net_valid')
	b:interface('net_read_in', 'data','in','clk')
		b:signal('data','i_net_raddr','8','raddr')
		b:signal('data','i_net_rclaim','1','rclaim')
		b:signal('data','i_net_renable','1','enable')
		b:signal('data','i_net_rrelease','1','rrelease')
	b:interface('net_read_out', 'data','out','clk')
		b:signal('data','o_net_rdata','512')
	b:interface('comp_write_in', 'data','in','clk')
		b:signal('data','i_comp_waddr','128','waddr')
		b:signal('data','i_comp_wdata','512','wdata')
		b:signal('data','i_comp_we','16','we')
		b:signal('valid','i_comp_valid')
	b:interface('comp_read_in', 'data','in','clk')
		b:signal('data','i_comp_raddr','128')
	b:interface('comp_read_out', 'data','out','clk')
		b:signal('data','o_comp_rdata','512')

b:component('ram_top','cpu_top_ram')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('net_write_in', 'data','in','clk')
		b:signal('data','i_net_waddr','9','waddr')
		b:signal('data','i_net_wdata','256','wdata')
		b:signal('data','i_net_wclaim','1','wclaim')
		b:signal('data','i_net_wrelease','1','wrelease')
		b:signal('data','i_net_we','1','we')
	b:interface('comp_in', 'data','in','clk')
		b:signal('data','i_comp_raddr','9','raddr')
		b:signal('data','i_comp_waddr','9','waddr')
		b:signal('data','i_comp_wdata','256','wdata')
		b:signal('data','i_comp_be','8','be')
		b:signal('data','i_comp_we','1','we')
	b:interface('comp_read_out', 'data','out','clk')
		b:signal('data','o_comp_rdata','512')

b:component('ram_net_read','cpu_ram_net_read_ct')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('cid', 'data','in','clk')
		b:signal('data','c_id','4','c_id')
	b:interface('net_out', 'data','out','clk')
		b:signal('data','o_net_data','256')
		b:signal('valid','o_net_valid')
		b:signal('sop','o_net_sop')
		b:signal('eop','o_net_eop')
		b:signal('ready','i_net_ready')
	b:interface('cur_read_out', 'data','out','clk')
		b:signal('data','o_cur_addr','8','raddr')
		b:signal('data','o_cur_rclaim','1','rclaim')
		b:signal('data','o_cur_enable','1','enable')
		b:signal('data','o_cur_rrelease','1','rrelease')
		b:signal('lp_id','o_cur_lp_id','1')
		b:linkpoint('cur0',"1'b0",'broadcast')
		b:linkpoint('cur1',"1'b1",'broadcast')
	b:interface('block_in0', 'data','in','clk')
		b:signal('data','i_cur_data0','512')
	b:interface('block_in1', 'data','in','clk')
		b:signal('data','i_cur_data1','512')
	b:interface('wrreq_in', 'data','in','clk')
		b:signal('valid','i_wrreq')
		b:signal('data','i_wrreq_whichbufs_top','1','whichbufs_top')
		b:signal('data','i_wrreq_whichpage','1','whichpage')
		b:signal('data','i_wrreq_blkx','8','blkx')
		b:signal('data','i_wrreq_blky','8','blky')
	b:interface('wrreq_out', 'data','out','clk')
		b:signal('valid','o_wrreq_done')

b:component('ram_net_write','cpu_ram_net_write_curleft_ct')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('cur_out', 'data','out','clk')
		b:signal('data','o_cur_addr','8','waddr')
		b:signal('data','o_cur_data','512','wdata')
		b:signal('data','o_cur_claim','1','wclaim')
		b:signal('data','o_cur_release','1','wrelease')
		b:signal('data','o_cur_we','2','we')
		b:signal('lp_id','o_cur_lp_id','1')
		b:linkpoint('cur0',"1'b0",'broadcast')
		b:linkpoint('cur1',"1'b1",'broadcast')
	b:interface('left_out', 'data','out','clk')
		b:signal('data','o_left_addr','8','waddr')
		b:signal('data','o_left_data','512','wdata')
		b:signal('data','o_left_claim','1','wclaim')
		b:signal('data','o_left_release','1','wrelease')
		b:signal('data','o_left_we','2','we')
		b:signal('lp_id','o_left_lp_id','1')
		b:linkpoint('left0',"1'b0",'broadcast')
		b:linkpoint('left1',"1'b1",'broadcast')
	b:interface('net_in', 'data','in','clk')
		b:signal('data','i_net_data','256')
		b:signal('valid','i_net_valid')
		b:signal('sop','i_net_sop')
		b:signal('eop','i_net_eop')

b:component('ram_net_write_top','cpu_ram_net_write_top')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('top_out', 'data','out','clk')
		b:signal('data','o_top_addr','9','waddr')
		b:signal('data','o_top_data','256','wdata')
		b:signal('data','o_top_wclaim','1','wclaim')
		b:signal('data','o_top_wrelease','1','wrelease')
		b:signal('data','o_top_we','1','we')
	b:interface('net_in', 'data','in','clk')
		b:signal('data','i_net_data','256')
		b:signal('valid','i_net_valid')
		b:signal('sop','i_net_sop')
		b:signal('eop','i_net_eop')
	b:interface('loop_in', 'data','in','clk')
		b:signal('data','i_loop_data','256')
		b:signal('valid','i_loop_valid')
		b:signal('sop','i_loop_sop')
		b:signal('eop','i_loop_eop')

b:component('pipe','cpu_pipeline_ct')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('left_write_out', 'data','out','clk')
		b:signal('data','o_left_wr_addr','128','waddr')
		b:signal('data','o_left_wr_data','512','wdata')
		b:signal('data','o_left_wr_enable','16','we')
		b:signal('lp_id','o_left_lp_id','1')
		b:linkpoint('left0',"1'b0",'broadcast')
		b:linkpoint('left1',"1'b1",'broadcast')
	b:interface('cur_write_out', 'data','out','clk')
		b:signal('data','o_cur_wr_addr','128','waddr')
		b:signal('data','o_cur_wr_data','512','wdata')
		b:signal('data','o_cur_wr_enable','16','we')
		b:signal('lp_id','o_cur_lp_id','1')
		b:linkpoint('cur0',"1'b0",'broadcast')
		b:linkpoint('cur1',"1'b1",'broadcast')
	b:interface('cur_read_in0', 'data','in','clk')
		b:signal('data','i_cur_rd_data0','512')
	b:interface('cur_read_in1', 'data','in','clk')
		b:signal('data','i_cur_rd_data1','512')
	b:interface('left_read_in0', 'data','in','clk')
		b:signal('data','i_left_rd_data0','512')
	b:interface('left_read_in1', 'data','in','clk')
		b:signal('data','i_left_rd_data1','512')
	b:interface('left_read_out', 'data','out','clk')
		b:signal('data','o_left_rd_addr','128')
	b:interface('cur_read_out', 'data','out','clk')
		b:signal('data','o_cur_rd_addr','128')
	b:interface('top_out', 'data','out','clk')
		b:signal('data','o_top_rd_addr','9','raddr')
		b:signal('data','o_top_wr_addr','9','waddr')
		b:signal('data','o_top_wr_data','256','wdata')
		b:signal('data','o_top_be','8','be')
		b:signal('data','o_top_wr_enable','1','we')
	b:interface('top_in', 'data','in','clk')
		b:signal('data','i_top_rd_data','256')
	b:interface('pipe_ctrl_in', 'data','in','clk')
		b:signal('data','i_k_reset','1','k_reset')
		b:signal('data','i_k_inc','1','k_inc')
		b:signal('data','i_i_reset','1','i_reset')
		b:signal('data','i_i_inc','1','i_inc')
		b:signal('data','i_i_load_k1','1','i_load_k1')
		b:signal('data','i_j_reset','1','j_reset')
		b:signal('data','i_j_inc','1','j_inc')
		b:signal('data','i_j_load_k','1','j_load_k')
		b:signal('data','i_j_load_k1','1','j_load_k1')
		b:signal('data','i_valid','1','valid')
		b:signal('data','i_norm','1','norm')
		b:signal('data','i_recip','1','recip')
		b:signal('data','i_wr_top','1','wr_top')
		b:signal('data','i_wr_left','1','wr_left')
		b:signal('data','i_wr_cur','1','wr_cur')
		b:signal('data','i_whichpage','1','whichpage')
	b:interface('pipe_ctrl_out', 'data','out','clk')
		b:signal('data','o_k_done','1','k_done')
		b:signal('data','o_i_done','1','i_done')
		b:signal('data','o_j_done','1','j_done')
		b:signal('data','o_pipe_empty','1','pipe_empty')

b:component('pipe_ctrl','cpu_pipe_ctrl_ct')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('pipe_out', 'data','out','clk')
		b:signal('data','o_k_reset','1','k_reset')
		b:signal('data','o_k_inc','1','k_inc')
		b:signal('data','o_i_reset','1','i_reset')
		b:signal('data','o_i_inc','1','i_inc')
		b:signal('data','o_i_load_k1','1','i_load_k1')
		b:signal('data','o_j_reset','1','j_reset')
		b:signal('data','o_j_inc','1','j_inc')
		b:signal('data','o_j_load_k','1','j_load_k')
		b:signal('data','o_j_load_k1','1','j_load_k1')
		b:signal('data','o_valid','1','valid')
		b:signal('data','o_norm','1','norm')
		b:signal('data','o_recip','1','recip')
		b:signal('data','o_wr_top','1','wr_top')
		b:signal('data','o_wr_left','1','wr_left')
		b:signal('data','o_wr_cur','1','wr_cur')
		b:signal('data','o_whichpage','1','whichpage')
	b:interface('pipe_in', 'data','in','clk')
		b:signal('data','i_k_done','1','k_done')
		b:signal('data','i_i_done','1','i_done')
		b:signal('data','i_j_done','1','j_done')
		b:signal('data','i_pipe_empty','1','pipe_empty')
	b:interface('main_in', 'data','in','clk')
		b:signal('valid','i_go')
		b:signal('data','i_flush','1','flush')
		b:signal('data','i_mode','2','mode')
		b:signal('data','i_whichpage','1','whichpage')
	b:interface('main_out', 'data','out','clk')
		b:signal('valid','o_done')

b:component('main_ctrl','cpu_main_ctrl')
	b:clock_sink('clk','clk_b')
	b:reset_sink('reset','reset')
	b:interface('netif_out', 'data','out','clk')
		b:signal('data','o_rdreq','1','rdreq')
		b:signal('data','o_rdreq_toctrl','1','rdreq_toctrl')
		b:signal('data','o_rdreq_blkx','8','rdreq_blkx')
		b:signal('data','o_rdreq_blky','8','rdreq_blky')
		b:signal('data','o_rdreq_whichbufs','3','rdreq_whichbufs')
		b:signal('data','o_rdreq_whichpage','1','rdreq_whichpage')
		b:signal('data','o_done','1','done')
	b:interface('netif_in', 'data','in','clk')
		b:signal('data','i_go','1','go')
		b:signal('data','i_rdreq_ack','1','rdreq_ack')
		b:signal('data','i_go_firstcol','1','go_firstcol')
		b:signal('data','i_go_blkx','8','go_blkx')
		b:signal('data','i_go_blky','8','go_blky')
		b:signal('data','i_go_blkymax','8','go_blkymax')
		b:signal('data','i_go_blkxmin','8','go_blkxmin')
		b:signal('data','i_rddone','1','rddone')
		b:signal('data','i_rddone_whichbufs','3','rddone_whichbufs')
		b:signal('data','i_rddone_whichpage','1','rddone_whichpage')
		b:signal('data','i_done_ack','1','done_ack')
	b:interface('comp_out', 'data','out','clk')
		b:signal('valid','o_comp_go')
		b:signal('data','o_comp_flush','1','comp_flush')
		b:signal('data','o_comp_mode','2','comp_mode')
		b:signal('data','o_comp_page','1','comp_page')
	b:interface('wrreq_out', 'data','out','clk')
		b:signal('valid','o_wrreq')
		b:signal('data','o_wrreq_blkx','8','wrreq_blkx')
		b:signal('data','o_wrreq_blky','8','wrreq_blky')
		b:signal('data','o_wrreq_whichpage','1','wrreq_whichpage')
		b:signal('data','o_wrreq_whichbufs_top','1','wrreq_whichbufs_top')
	b:interface('comp_in', 'data','in','clk')
		b:signal('valid','i_comp_done')
	b:interface('wrreq_in', 'data','in','clk')
		b:signal('valid','i_wrreq_ack')

b:component('net_interface','cpu_net_iface_ct')
	b:clock_sink('clk','clk')
	b:reset_sink('reset','reset')
	b:interface('c_id', 'data','in','clk')
		b:signal('data','c_id','4')
	b:interface('data_out', 'data','out','clk')
		b:signal('data','o_net_data','256')
		b:signal('valid','o_net_valid')
		b:signal('sop','o_net_sop')
		b:signal('eop','o_net_eop')
		b:signal('ready','i_net_ready')
	b:interface('data_in', 'data','in','clk')
		b:signal('data','i_net_data','256')
		b:signal('valid','i_net_valid')
		b:signal('sop','i_net_sop')
		b:signal('eop','i_net_eop')
		b:signal('ready','o_net_ready')
	b:interface('cmd_in', 'data','in','clk')
		b:signal('data','i_cmd_data','42')
		b:signal('valid','i_cmd_valid')
		b:signal('ready','o_cmd_ready')
	b:interface('cmd_out_mem', 'data','out','clk')
		b:signal('data','o_mem_data','42')
		b:signal('valid','o_mem_valid')
		b:signal('ready','i_mem_ready')
	b:interface('cmd_out_ctrl', 'data','out','clk')
		b:signal('data','o_cmd_data','42')
		b:signal('valid','o_cmd_valid')
		b:signal('ready','i_cmd_ready')
	b:interface('comp_out', 'data','out','clk')
		b:signal('data','o_comp_data','256')
		b:signal('valid','o_comp_valid')
		b:signal('sop','o_comp_sop')
		b:signal('eop','o_comp_eop')
		b:signal('ready','i_comp_ready')
	b:interface('comp_in', 'data','in','clk')
		b:signal('data','i_comp_data','256')
		b:signal('valid','i_comp_valid')
		b:signal('sop','i_comp_sop')
		b:signal('eop','i_comp_eop')
		b:signal('ready','o_comp_ready')
	b:interface('main_ctrl_out', 'data','out','clk')
		b:signal('data','o_go','1','go')
		b:signal('data','o_go_firstcol','1','go_firstcol')
		b:signal('data','o_go_blkx','8','go_blkx')
		b:signal('data','o_go_blky','8','go_blky')
		b:signal('data','o_go_blkxmin','8','go_blkxmin')
		b:signal('data','o_go_blkymax','8','go_blkymax')
		b:signal('data','o_rddone','1','rddone')
		b:signal('data','o_rddone_whichbufs','3','rddone_whichbufs')
		b:signal('data','o_rddone_whichpage','3','rddone_whichpage')
		b:signal('data','o_rdreq_ack','1','rdreq_ack')
		b:signal('data','o_done_ack','1','done_ack')
	b:interface('main_ctrl_in', 'data','in','clk')
		b:signal('data','i_rdreq','1','rdreq')
		b:signal('data','i_rdreq_toctrl','1','rdreq_toctrl')
		b:signal('data','i_rdreq_blkx','8','rdreq_blkx')
		b:signal('data','i_rdreq_blky','8','rdreq_blky')
		b:signal('data','i_rdreq_whichbufs','3','rdreq_whichbufs')
		b:signal('data','i_rdreq_whichpage','1','rdreq_whichpage')
		b:signal('data','i_done','1','done')

b:system('cpu', topo_xbar)
	b:instance('left0','ram_curleft')
		b:defparam('LEFT','1')
	b:instance('left1','ram_curleft')
		b:defparam('LEFT','1')
	b:instance('cur0','ram_curleft')
		b:defparam('LEFT','0')
	b:instance('cur1','ram_curleft')
		b:defparam('LEFT','0')
	b:parameter('IS_BPU')
	b:instance('top','ram_top')
	b:instance('net_wr_top','ram_net_write_top')
	b:instance('net_wr','ram_net_write')
	b:instance('net_rd','ram_net_read')
	b:instance('pipe','pipe')
		b:defparam('IS_BPU', 'IS_BPU')
	b:instance('pipe_ctrl','pipe_ctrl')
		b:defparam('IS_BPU', 'IS_BPU')
	b:instance('main_ctrl','main_ctrl')
	b:instance('netif','net_interface')
	b:export('clk_a','clock','in')
	b:export('clk_b','clock','in')
	b:export('reset','reset','in')
	b:export('cmd_out_ctrl','data','out')
	b:export('cmd_out_mem','data','out')
	b:export('data_out','data','out')
	b:export('cmd_in','data','in')
	b:export('data_in','data','in')

	b:link('clk_a','left0.clk')
	b:link('clk_a','left1.clk')
	b:link('clk_a','cur0.clk')
	b:link('clk_a','cur1.clk')
	b:link('clk_a','top.clk')
	b:link('clk_a','pipe.clk')
	b:link('clk_a','pipe_ctrl.clk')
	b:link('clk_a','net_wr_top.clk')
	b:link('clk_a','net_wr.clk')
	b:link('clk_a','net_rd.clk')
	b:link('clk_b','main_ctrl.clk')
	b:link('clk_b','netif.clk')
	b:link('reset','left0.reset')
	b:link('reset','left1.reset')
	b:link('reset','cur0.reset')
	b:link('reset','cur1.reset')
	b:link('reset','top.reset')
	b:link('reset','pipe.reset')
	b:link('reset','pipe_ctrl.reset')
	b:link('reset','net_wr_top.reset')
	b:link('reset','net_wr.reset')
	b:link('reset','net_rd.reset')
	b:link('reset','netif.reset')
	b:link('reset','main_ctrl.reset')
	b:link('left0.comp_read_out','pipe.left_read_in0')
	b:link('left1.comp_read_out','pipe.left_read_in1')
	b:link('cur0.comp_read_out','pipe.cur_read_in0')
	b:link('cur0.net_read_out','net_rd.block_in0')
	b:link('cur1.comp_read_out','pipe.cur_read_in1')
	b:link('cur1.net_read_out','net_rd.block_in1')
	b:link('top.comp_read_out','pipe.top_in')
	b:link('net_wr_top.top_out','top.net_write_in')
	b:link('net_wr.cur_out.cur0','cur0.net_write_in')
	b:link('net_wr.cur_out.cur1','cur1.net_write_in')
	b:link('net_wr.left_out.left0','left0.net_write_in')
	b:link('net_wr.left_out.left1','left1.net_write_in')
	b:link('net_rd.cur_read_out.cur0','cur0.net_read_in')
	b:link('net_rd.cur_read_out.cur1','cur1.net_read_in')
	
	b:link('net_rd.net_out','net_wr_top.loop_in')
	b:link('pipe.cur_write_out.cur0','cur0.comp_write_in')
	b:link('pipe.cur_write_out.cur1','cur1.comp_write_in')
	b:link('pipe.left_write_out.left0','left0.comp_write_in')
	b:link('pipe.left_write_out.left1','left1.comp_write_in')
	b:link('pipe.left_read_out','left0.comp_read_in')
	b:link('pipe.left_read_out','left1.comp_read_in')
	b:link('pipe.cur_read_out','cur0.comp_read_in')
	b:link('pipe.cur_read_out','cur1.comp_read_in')
	b:link('pipe.top_out','top.comp_in')
	b:link('pipe.pipe_ctrl_out','pipe_ctrl.pipe_in')
	b:link('pipe_ctrl.pipe_out','pipe.pipe_ctrl_in')
	
	b:link('net_rd.wrreq_out','main_ctrl.wrreq_in')
	b:link('main_ctrl.wrreq_out', 'net_rd.wrreq_in')
	b:link('pipe_ctrl.main_out','main_ctrl.comp_in')
	b:link('main_ctrl.comp_out','pipe_ctrl.main_in')

	b:link('net_rd.net_out','netif.comp_in')
	b:link('netif.comp_out','net_wr_top.net_in')
	b:link('netif.comp_out','net_wr.net_in')
	
	b:link('main_ctrl.netif_out','netif.main_ctrl_in')
	b:link('netif.main_ctrl_out','main_ctrl.netif_in')
	b:link('netif.data_out','data_out')
	b:link('data_in','netif.data_in')
	b:link('netif.cmd_out_mem','cmd_out_mem')
	b:link('netif.cmd_out_ctrl','cmd_out_ctrl')
	b:link('cmd_in','netif.cmd_in')


--[[b:component('cpu','cpu')
	b:clock_sink('clk_a','clk_a')
	b:clock_sink('clk_b','clk_b')
	b:reset_sink('reset','reset')
	b:interface('data_in', 'data','in','clk_b')
		b:signal('data','data_in_data','256')
		b:signal('valid','data_in_valid')
		b:signal('ready','data_in_ready')
		b:signal('sop','data_in_sop')
		b:signal('eop','data_in_eop')
	b:interface('data_out', 'data','out','clk_b')
		b:signal('data','data_out_data','256')
		b:signal('valid','data_out_valid')
		b:signal('ready','data_out_ready')
		b:signal('sop','data_out_sop')
		b:signal('eop','data_out_eop')
	b:interface('cmd_in', 'data','in','clk_b')
		b:signal('data','cmd_in_data','42')
		b:signal('valid','cmd_in_valid')
		b:signal('ready','cmd_in_ready')
	b:interface('cmd_out_ctrl', 'data','out','clk_b')
		b:signal('data','cmd_out_ctrl_data','42')
		b:signal('valid','cmd_out_ctrl_valid')
		b:signal('ready','cmd_out_ctrl_ready')
	b:interface('cmd_out_mem', 'data','out','clk_b')
		b:signal('data','cmd_out_mem_data','42')
		b:signal('valid','cmd_out_mem_valid')
		b:signal('ready','cmd_out_mem_ready')--]]

b:component('mem','memnode_top_ct')
	b:clock_sink('clk_b','clk_b')
	b:reset_sink('reset','reset')
	b:interface('data_in', 'data','in','clk_b')
		b:signal('data','i_net_flit','256')
		b:signal('valid','i_net_valid')
		b:signal('ready','o_net_ready')
		b:signal('sop','i_net_sop')
		b:signal('eop','i_net_eop')
	b:interface('data_out', 'data','out','clk_b')
		b:signal('data','o_net_flit','256')
		b:signal('valid','o_net_valid')
		b:signal('ready','i_net_ready')
		b:signal('sop','o_net_sop')
		b:signal('eop','o_net_eop')
		b:signal('lp_id','o_net_lp_id', cid_width)
		b:linkpoint('bcast', cid_width .. "'d0",'broadcast')
		for i = 0, num_cpu-1 do
			b:linkpoint('cpu'..i, cid_width .. "'d" .. i+1 , 'broadcast')
		end
	
	b:interface('cmd_in', 'data','in','clk_b')
		b:signal('data','i_cmd_flit','42')
		b:signal('valid','i_cmd_valid')
		b:signal('ready','o_cmd_ready')
		b:signal('lp_id','i_cmd_lp_id', cid_width)
		b:linkpoint('ctrl',cid_width .. "'d0",'broadcast')
		for i = 0, num_cpu-1 do
			b:linkpoint('cpu'..i, cid_width .. "'d" .. i+1 , 'broadcast')
		end
	b:interface('ddr','conduit','out')
		b:signal('out','addr','30','addr')
		b:signal('out','wdata','256','wdata')
		b:signal('out','be','32','be')
		b:signal('out','read_req','1','read_req')
		b:signal('out','write_req','1','write_req')
		b:signal('out','burstcount','6','ddr_size')
		b:signal('in','waitrequest','1','waitrequest')
		b:signal('in','rdata','256','rdata')
		b:signal('in','rdata_valid','1','rdata_valid')

b:component('ctrl','ctrl_top_ct')
	b:clock_sink('clk_b','clk_b')
	b:reset_sink('reset','reset')
	b:interface('cmd_in', 'data','in','clk_b')
		b:signal('data','i_cmd_flit','42')
		b:signal('valid','i_cmd_valid')
		b:signal('ready','o_cmd_ready')
	b:interface('cmd_out', 'data','out','clk_b')
		b:signal('data','o_cmd_flit','42')
		b:signal('valid','o_cmd_valid')
		b:signal('ready','i_cmd_ready')
		b:signal('sop','o_cmd_sop')
		b:signal('eop','o_cmd_eop')
		b:signal('lp_id','o_cmd_lp_id',cid_width)
		for i = 0, num_cpu-1 do
			b:linkpoint('cpu'..i, cid_width .. "'d" .. i , 'broadcast')
		end
		b:linkpoint('mem', cid_width .. "'d" .. num_cpu,'broadcast')

	b:interface('ctrl_top','conduit', 'out' )
		b:signal('in','i_nblocks','8','nblocks')
		b:signal('in','i_go','1','go')
		b:signal('out','o_done','1','done')


b:system('lu_top', topo_xbar)

	b:instance('ctrl_node','ctrl')
		b:defparam('LP_ID_WIDTH', cid_width)
		b:defparam('MEM_LOCAL_ID', num_cpu)
	b:instance('mem_node','mem')
		b:defparam('LP_ID_WIDTH', cid_width)
		b:defparam('CTRL_LOCAL_ID', 0)
		b:defparam('BURSTLEN','6')
		b:defparam('ADDRESSWIDTH','30')
	b:export('clk_a','clock','in')
	b:export('clk_b','clock','in')
	b:export('reset','reset','in')
		
	for i = 0, num_cpu-1 do 
		local cur_inst = 'cpu' .. i 
		b:instance(cur_inst, 'cpu')
		if ( i == 0 ) then
			b:defparam('IS_BPU',1)
		else
			b:defparam('IS_BPU',0)
		end

		b:link('clk_b', cur_inst .. '.clk_b') 
		b:link('clk_a', cur_inst .. '.clk_a') 
		b:link('reset', cur_inst .. '.reset')
		b:link('mem_node.data_out.' .. cur_inst, cur_inst .. '.data_in')
		b:link('mem_node.data_out.bcast', cur_inst .. '.data_in')
		b:link(cur_inst .. '.data_out','mem_node.data_in')

		b:link(cur_inst .. '.cmd_out_mem','mem_node.cmd_in.' .. cur_inst)
		b:link(cur_inst .. '.cmd_out_ctrl','ctrl_node.cmd_in')
		b:link('ctrl_node.cmd_out.' .. cur_inst, cur_inst .. '.cmd_in')
	end
	
	b:link('clk_b','mem_node.clk_b')
	b:link('clk_b','ctrl_node.clk_b')
	b:link('reset','mem_node.reset')
	b:link('reset','ctrl_node.reset')
	b:link('ctrl_node.cmd_out.mem','mem_node.cmd_in.ctrl')

s:submit()
